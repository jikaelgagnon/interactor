(()=>{"use strict";class t{constructor(t,e){this.type=t,this.payload=e}}class e{constructor(t,e,n){this.type=t,this.createdAt=new Date,this.sourceState=e,this.metadata=n}}const n=JSON.parse('{"baseURL":"https://www.tiktok.com","paths":{"/*":{"selectors":[{"selector":"a[data-e2e=\\"tiktok-logo\\"]","name":"TikTok Logo"},{"selector":"span[data-e2e=\\"like-icon\\"]","name":"Like Button"},{"selector":"span[data-e2e=\\"comment-icon\\"]","name":"Comment Button"},{"selector":"button[aria-label=\\"For You\\"]","name":"Home Button"},{"selector":"button[aria-label=\\"Explore\\"]","name":"Explore Button"},{"selector":"button[aria-label=\\"Following\\"]","name":"Following Button"}]}}}');console.log("TESTING THAT TS WORKS!!!!!!!!!!!11"),console.log("using tiktok,..."),console.log(n);const o=new class{constructor(t){this.config=t}addIDSelector(t,e){const n=this.config.paths;if(!(t in n))throw new Error("Trying to add ID selector to path that doesn't exist");n[t].idSelector=e}}(n);o.addIDSelector("/*",(()=>{let t=document.querySelector("div.xgplayer-container.tiktok-web-player");return t?`https://tiktok.com/share/video/${t.id.split("-").at(-1)}`:(console.log("no url found!"),"")})),new class{constructor(t){this.StringToColor=function(){let t=null;return{next:function(e){return null===t&&(t={},t.stringToColorHash={},t.nextVeryDifferntColorIdx=0,t.veryDifferentColors=["#00FF00","#0000FF","#FF0000","#01FFFE","#FFA6FE","#FFDB66","#006401","#010067","#95003A","#007DB5","#FF00F6","#FFEEE8","#774D00","#90FB92","#0076FF","#D5FF00","#FF937E","#6A826C","#FF029D","#FE8900","#7A4782","#7E2DD2","#85A900","#FF0056","#A42400","#00AE7E","#683D3B","#BDC6FF","#263400","#BDD393","#00B917","#9E008E","#001544","#C28C9F","#FF74A3","#01D0FF","#004754","#E56FFE","#788231","#0E4CA1","#91D0CB","#BE9970","#968AE8","#BB8800","#43002C","#DEFF74","#00FFC6","#FFE502","#620E00","#008F9C","#98FF52","#7544B1","#B500FF","#00FF78","#FF6E41","#005F39","#6B6882","#5FAD4E","#A75740","#A5FFD2","#FFB167","#009BFF","#E85EBE"]),t.stringToColorHash[e]||(t.stringToColorHash[e]=t.veryDifferentColors[t.nextVeryDifferntColorIdx++],console.log(`%c The colour for ${e}`,`color: ${t.stringToColorHash[e]}`)),t.stringToColorHash[e]}}}(),this.interactionEvents=Array.isArray(t.interactionEvents)?t.interactionEvents:["click"],this.debug="boolean"!=typeof t.debug||t.debug,this.paths="object"==typeof t&&void 0!==t.paths?t.paths:{},this.baseURL="object"==typeof t&&void 0!==t.baseURL?t.baseURL:"",this.currentURL=document.location.href,this.selectorString=void 0,this.currentSelectors=void 0,this.currentInteractions=[],this.currentURLUsesId=void 0,this.currentMatch=void 0,console.log(`Current url is: ${this.currentURL}`),console.log("Received config:"),console.log(t),this.updateSelectorString(),this.initializeSession(),this.bindEvents()}updateSelectorString(){this.currentURLUsesId=!1;let t="";const e=Object.keys(this.paths).filter((e=>{console.log(e);const n=new URLPattern(e,this.baseURL).test(this.currentURL);return n&&e.length>t.length&&(t=e),n}));if(0!==e.length){t.endsWith(":id")&&(console.log("current url uses id"),this.currentURLUsesId=!0),this.currentMatch=this.paths[t],this.currentInteractions=this.currentMatch,console.log(this.currentMatch),this.currentInteractions=[];for(const t of e){let e=this.paths[t];console.log(e);for(const t of e.selectors){console.log(`Adding ${t} to current interactions`);let e=t.selector;this.currentInteractions.push({selector:`${e}:not([data-listener-attached])`,name:t.name})}}console.log(this.currentInteractions)}else console.log("no matches found")}sendMessageToBackground(e,n){return o=this,i=void 0,s=function*(){let o=new t(e,n);return yield chrome.runtime.sendMessage(o)},new((r=void 0)||(r=Promise))((function(t,e){function n(t){try{c(s.next(t))}catch(t){e(t)}}function a(t){try{c(s.throw(t))}catch(t){e(t)}}function c(e){var o;e.done?t(e.value):(o=e.value,o instanceof r?o:new r((function(t){t(o)}))).then(n,a)}c((s=s.apply(o,i||[])).next())}));var o,i,r,s}onInteractionDetection(t,e){const n=this.createInteractionRecord(e,this.getCleanStateName(),"interaction");this.sendMessageToBackground("onInteractionDetection",n)}checkForMatch(t){let e=new URL(this.currentURL).pathname,n=new URL(t).pathname,o=e.split("/"),i=n.split("/");if(e.length!==n.length)return!1;let r=o.length-(this.currentURLUsesId?1:0);for(let t=0;t<r;t++)if(o[t]!==i[t])return!1;return!0}getCleanStateName(){let t=new URL(this.currentURL).pathname.split("/");return this.currentURLUsesId&&(t=t.slice(0,t.length-1)),t.join("/")}onNavigationDetection(t){let e=!(t.destination.url===this.currentURL),n=this.getCleanStateName(),o=this.checkForMatch(t.destination.url);this.currentURL,this.currentURL=t.destination.url;let i=this.getCleanStateName();if("push"!==t.navigationType||o){if("replace"===t.navigationType||o){const o=this.createSelfLoopRecord(t,n,e);this.sendMessageToBackground("onNavigationDetection",o)}}else{this.updateSelectorString();const e=this.createStateChangeRecord(t,n,i);this.sendMessageToBackground("onNavigationDetection",e)}}addListenersToMutations(){this.currentInteractions.forEach((t=>{let e=document.querySelectorAll(t.selector),n=t.name;e.forEach((t=>{this.debug&&(t.style.border=`2px solid ${this.StringToColor.next(n)}`),t.setAttribute("data-listener-attached","true");for(let e=0;e<this.interactionEvents.length;e++)t.addEventListener(this.interactionEvents[e],(t=>{this.onInteractionDetection(t,n)}),!0)}))}))}bindEvents(){console.log("binding events to the page"),window.addEventListener("load",(()=>{new MutationObserver(((t,e)=>this.addListenersToMutations())).observe(document.body,{childList:!0,subtree:!0}),this.addListenersToMutations()})),navigation.addEventListener("navigate",(t=>this.onNavigationDetection(t)))}debuggingLog(t){this.debug&&console.log(t)}getIdOrEmpty(){let t="";return"idSelector"in this.currentMatch?(console.log("getting id"),t=this.currentMatch.idSelector()):console.log("no id selector exists"),t}createStateChangeRecord(t,n,o){const i={destinationState:o,id:this.getIdOrEmpty()};return new e("state_change",n,i)}createSelfLoopRecord(t,n,o){const i={urlChange:o,id:this.getIdOrEmpty()};return new e("self_loop",n,i)}createInteractionRecord(t,n,o){const i={name:t,id:this.getIdOrEmpty()};return new e("interaction",n,i)}addRecord(t){this.debuggingLog(t)}getCurrentState(){return{page:{location:window.location.pathname,href:window.location.href,origin:window.location.origin,title:document.title},url:this.currentURL}}initializeSession(){this.sendMessageToBackground("initializeSession",this.getCurrentState())}}(o.config)})();