!function(){"use strict";class e{constructor(e,t){this.type=e,this.payload=t}}class t{constructor(e,t,o){this.type=e,this.createdAt=new Date,this.sourceState=t,this.metadata=o}}var o=JSON.parse('{"baseURL":"https://www.youtube.com","paths":{"/*":{"selectors":[{"selector":"#endpoint","name":"Side Navigation Button"},{"selector":"#logo-icon","name":"YouTube Logo"},{"selector":"ytd-rich-grid-media.style-scope.ytd-rich-item-renderer","name":"Video"},{"selector":"ytm-shorts-lockup-view-model-v2","name":"Shorts on Miniplayer"},{"selector":".yt-spec-button-shape-next[aria-label=\\"Next\\"]","name":"Next Button"},{"selector":"#chip-container.style-scope.yt-chip-cloud-chip-renderer","name":"Category Button"}]},"/shorts/:id":{"selectors":[{"selector":"#like-button[is-shorts]","name":"Shorts Like Button"},{"selector":"#dislike-button[is-shorts]","name":"Shorts Dislike Button"}]},"/watch?v=*":{"selectors":[{"selector":"ytd-compact-video-renderer.style-scope.ytd-item-section-renderer","name":"Watch Page Recommended Video"},{"selector":"ytd-toggle-button-renderer#dislike-button","name":"Comment Dislike Button"},{"selector":"ytd-toggle-button-renderer#like-button","name":"Comment Like Button"}]}}}');const n=new class{constructor(e){this.config=e}}(o);console.log("PRINTING CONFIG"),console.log(n.config),new class{constructor(e){this.interactionEvents=!0===Array.isArray(e.interactionEvents)?e.interactionEvents:["click"],this.debug="boolean"!=typeof e.debug||e.debug,this.paths="object"==typeof e&&void 0!==e.paths?e.paths:{},this.baseURL="object"==typeof e&&void 0!==e.baseURL?e.baseURL:"",this.currentURL=document.location.href,this.selectorString,this.currentSelectors,this.currentInteractions=[],this.currentURLUsesId,this.currentMatch,console.log(`Current url is: ${this.currentURL}`),console.log("Received config:"),console.log(e),this.updateSelectorString(),this.initializeSession(),this.bindEvents()}updateSelectorString(){this.currentURLUsesId=!1;let e="";const t=Object.keys(this.paths).filter((t=>{console.log(t);const o=new URLPattern(t,this.baseURL).test(this.currentURL);return o&&t.length>e.length&&(e=t),o}));if(0!=t.length){e.endsWith(":id")&&(console.log("current url uses id"),this.currentURLUsesId=!0),this.currentMatch=this.paths[e],this.currentInteractions=this.currentMatch,console.log(this.currentMatch),this.currentInteractions=[];for(const e of t){let t=this.paths[e];console.log(t);for(const e of t.selectors){console.log(`Adding ${e} to current interactions`);let t=e.selector;this.currentInteractions.push({selector:`${t}:not([data-listener-attached])`,name:e.name})}}console.log(this.currentInteractions)}else console.log("no matches found")}async sendMessageToBackground(t,o){let n=new e(t,o);return await chrome.runtime.sendMessage(n)}onInteractionDetection(e,t){const o=this.createInteractionRecord(t,this.getCleanStateName(),"interaction");this.sendMessageToBackground("onInteractionDetection",o)}checkForMatch(e){let t=new URL(this.currentURL).pathname,o=new URL(e).pathname,n=t.split("/"),s=o.split("/");if(console.log(`cur path uses ID: ${this.currentURLUsesId}`),console.log(`cur path ${t}, length: ${n.length}`),console.table(n),console.log(`other path ${o}, length: ${s.length}`),console.table(s),t.length!==o.length)return!1;console.log("lengths are the same");let r=n.length-1*this.currentURLUsesId;for(let e=0;e<r;e++)if(n[e]!=n[e])return!1;return!0}getCleanStateName(){console.log(`Current url: ${this.currentURL}`);let e=new URL(this.currentURL).pathname,t=e.split("/");return console.log(`Current path: ${e}`),console.log(`Uses ID: ${this.currentURLUsesId}`),this.currentURLUsesId&&(t=t.slice(0,t.length-1)),console.log(`Groups: ${t}`),t.join("/")}onNavigationDetection(e){let t=!(e.destination.url===this.currentURL),o=this.getCleanStateName(),n=this.checkForMatch(e.destination.url);console.log(`URLs match: ${n}`),console.log("------ TRYING TO GET ID ------------");let s="idSelector"in this.currentMatch;if(console.log(`ID Selector is not null: ${s}`),s){let e=this.currentMatch.idSelector();console.log(e)}this.currentURL,this.currentURL=e.destination.url;let r=this.getCleanStateName();if("push"!==e.navigationType||n){if("replace"===e.navigationType||n){t?console.log("You're on the same page but URL changed"):console.log("You're on the same page and URL didn't change");const n=this.createSelfLoopRecord(e,o,t);this.sendMessageToBackground("onNavigationDetection",n)}}else{console.log("You changed pages"),this.updateSelectorString();const t=this.createStateChangeRecord(e,o,r);this.sendMessageToBackground("onNavigationDetection",t)}}StringToColor=function(){var e=null;return{next:function(t){return null===e&&((e={}).stringToColorHash={},e.nextVeryDifferntColorIdx=0,e.veryDifferentColors=["#00FF00","#0000FF","#FF0000","#01FFFE","#FFA6FE","#FFDB66","#006401","#010067","#95003A","#007DB5","#FF00F6","#FFEEE8","#774D00","#90FB92","#0076FF","#D5FF00","#FF937E","#6A826C","#FF029D","#FE8900","#7A4782","#7E2DD2","#85A900","#FF0056","#A42400","#00AE7E","#683D3B","#BDC6FF","#263400","#BDD393","#00B917","#9E008E","#001544","#C28C9F","#FF74A3","#01D0FF","#004754","#E56FFE","#788231","#0E4CA1","#91D0CB","#BE9970","#968AE8","#BB8800","#43002C","#DEFF74","#00FFC6","#FFE502","#620E00","#008F9C","#98FF52","#7544B1","#B500FF","#00FF78","#FF6E41","#005F39","#6B6882","#5FAD4E","#A75740","#A5FFD2","#FFB167","#009BFF","#E85EBE"]),e.stringToColorHash[t]||(e.stringToColorHash[t]=e.veryDifferentColors[e.nextVeryDifferntColorIdx++],console.log(`%c The colour for ${t}`,`color: ${e.stringToColorHash[t]}`)),e.stringToColorHash[t]}}}();addListenersToMutations(){console.log("iterating through current interactions"),console.log(`Number of interactions: ${this.currentInteractions.length}`),this.currentInteractions.forEach((e=>{let t=document.querySelectorAll(e.selector),o=e.name;t.forEach((e=>{this.debug&&(e.style.border=`2px solid ${this.StringToColor.next(o)}`),e.setAttribute("data-listener-attached","true");for(let t=0;t<this.interactionEvents.length;t++)e.addEventListener(this.interactionEvents[t],(e=>{this.onInteractionDetection(e,o)}),!0)}))}))}bindEvents(){console.log("binding events to the page"),window.addEventListener("load",(()=>{new MutationObserver(function(e,t){this.addListenersToMutations()}.bind(this)).observe(document.body,{childList:!0,subtree:!0}),this.addListenersToMutations()})),navigation.addEventListener("navigate",(e=>this.onNavigationDetection(e)))}debuggingLog(e){this.debug&&console.log(e)}createStateChangeRecord(e,o,n){return new t("state_change",o,{destinationState:n})}createSelfLoopRecord(e,o,n){return new t("self_loop",o,{urlChange:n})}createInteractionRecord(e,o,n){return new t("interaction",o,{name:e})}addRecord(e){this.debuggingLog(e)}getCurrentState(){return{page:{location:window.location.pathname,href:window.location.href,origin:window.location.origin,title:document.title},url:this.currentURL}}initializeSession(){this.sendMessageToBackground("initializeSession",this.getCurrentState())}}(n.config)}();