!function(){"use strict";class t{constructor(t,e){this.type=t,this.payload=e}}console.log("creating interactor"),new class{constructor(t){this.interactionEvents=!0===Array.isArray(t.interactionEvents)?t.interactionEvents:["click"],this.debug="boolean"!=typeof t.debug||t.debug,this.cssSelectors="object"==typeof t.cssSelectors&&void 0!==t.cssSelectors.interactions?t.cssSelectors.interactions:{},this.baseURL="object"==typeof t.cssSelectors&&void 0!==t.cssSelectors.baseURL?t.cssSelectors.baseURL:"",this.currentURL=document.location.href,this.selectorString,this.updateSelectorString(),this.currentSelectors,this.currentInteractions,console.log(`Current url is: ${this.currentURL}`),this.initializeSession(),this.bindEvents()}updateSelectorString(){const t=Object.keys(this.cssSelectors).filter((t=>(console.log(t),new URLPattern(t,this.baseURL).test(this.currentURL))));this.currentInteractions=[];for(const e of t){let t=this.cssSelectors[e];for(const e of t){let t=e.selector;this.currentInteractions.push({selector:`${t}:not([data-listener-attached])`,name:e.name})}}}async sendMessageToBackground(e,n){let s=new t(e,n);return await chrome.runtime.sendMessage(s)}onInteractionDetection(t,e){const n=this.createInteractionRecord(e,"interaction");this.sendMessageToBackground("onInteractionDetection",n)}onNavigationDetection(t){console.log(" ---- Navigation event detected"),t.destination.url!==this.currentURL?(console.log("New url detected!"),this.currentURL=t.destination.url,this.updateSelectorString()):console.log("URL was unchanged");const e=this.createNavigationRecord(t);this.sendMessageToBackground("onNavigationDetection",e)}addListenersToMutations(){this.currentInteractions.forEach((t=>{let e=document.querySelectorAll(t.selector),n=t.name;e.forEach((t=>{this.debug&&(t.style.border="2px solid red"),t.setAttribute("data-listener-attached","true");for(let e=0;e<this.interactionEvents.length;e++)t.addEventListener(this.interactionEvents[e],(t=>{this.onInteractionDetection(t,n)}),!0)}))}))}bindEvents(){console.log("binding events to the page"),window.addEventListener("load",(()=>{new MutationObserver(function(t,e){this.addListenersToMutations()}.bind(this)).observe(document.body,{childList:!0,subtree:!0}),this.addListenersToMutations()})),navigation.addEventListener("navigate",(t=>this.onNavigationDetection(t)))}debuggingLog(t){this.debug&&console.log(t)}createNavigationRecord(t){return{type:t.type,destinationURL:t.destination.url,createdAt:new Date}}createInteractionRecord(t,e){const n={name:t,type:"interaction",createdAt:new Date};return console.log(n),n}addRecord(t){this.debuggingLog(t)}getCurrentState(){return{page:{location:window.location.pathname,href:window.location.href,origin:window.location.origin,title:document.title},url:this.currentURL}}initializeSession(){this.session={start:null,end:null},this.session.start=this.getCurrentState()}closeSession(){this.session.end=this.getCurrentState(),console.log("closing seesion"),console.log(this.session),this.sendMessageToBackground("closeSession",this.session)}}({cssSelectors:{baseURL:"https://www.youtube.com",interactions:{"/*":[{selector:"#endpoint",name:"Side Navigation Button"},{selector:"#logo-icon",name:"YouTube Logo"},{selector:"#content.ytd-rich-item-renderer",name:"Video"},{selector:"ytm-shorts-lockup-view-model-v2",name:"Shorts on Homepage"},{selector:'.yt-spec-button-shape-next[aria-label="Next"]',name:"Next Button"}],"":[],"/shorts/:id":[{selector:"#like-button[is-shorts]",name:"Like Button"},{selector:"#dislike-button[is-shorts]",name:"Dislike Button"}]}}})}();